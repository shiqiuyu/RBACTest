<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.youzhong.dao.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.youzhong.entity.Resource" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="ResourceMap" type="Resource" extends="BaseResultMap" >
    <collection property="children" select="com.youzhong.dao.ResourceMapper.selectByPid" column="id"></collection>


  </resultMap>

  <sql id="Base_Column_List" >
    id, name, path, type, pid, flag
  </sql>
  <!--查询父节点-->
  <select id="selectByPidIsNull" resultMap="ResourceMap">
    select
    <include refid="Base_Column_List" />
    from t_resource
    where pid is null
  </select>

  <!--查询子节点-->
  <select id="selectByPid" resultMap="ResourceMap" parameterType="int" >
    select
    <include refid="Base_Column_List" />
    from t_resource
    where pid = #{id}
  </select>

  <!--根据用户id查询分配菜单或按钮-->
  <select id="selectMenuByUid" parameterType="map" resultMap="BaseResultMap">
  select DISTINCT r.*
  from t_resource  r   JOIN   t_role_resource  rr
  on  r.id = rr.resid  JOIN   t_user_role  ur
  on  rr.roleid  = ur.roleid
  where  r.type=#{type} and ur.uid = #{uid}
</select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youzhong.entity.Resource" >
    insert into t_resource (id, name, path, 
      type, pid, flag)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youzhong.entity.Resource" >
    insert into t_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzhong.entity.Resource" >
    update t_resource
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzhong.entity.Resource" >
    update t_resource
    set name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>